{"version":3,"file":"static/js/262.682d91dc.chunk.js","mappings":"oPACA,EAA2B,2B,SCMZ,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IAEzB,OACE,iBAAKC,UAAWC,EAAhB,WACE,iBAAMC,MAAO,CAAEC,YAAa,IAA5B,UACE,SAAC,MAAD,CAAYC,KAAK,YAEnB,qCAAaP,MAEb,SAACQ,EAAA,EAAD,CACEC,QAAQ,UACRJ,MAAO,CAAEK,QAAS,EAAGC,WAAY,IACjCC,KAAK,SACLC,QAAS,kBAAMf,EAASgB,EAAAA,EAAAA,WAJ1B,uBCjBN,OAAgB,QAAU,0BCEX,SAASC,IACtB,OACE,iBAAKZ,UAAWC,EAAAA,QAAhB,WACE,SAAC,KAAD,CAASD,UAAWC,EAAAA,QAAWY,GAAG,SAAlC,oBAIA,SAAC,KAAD,CAASb,UAAWC,EAAAA,QAAWY,GAAG,QAAlC,qBCTN,MAAsB,wBAAtB,EAAwD,4BCwBxD,EAlBmB,WACjB,IAAMC,GAAahB,EAAAA,EAAAA,IAAYiB,EAAAA,IAE/B,OACE,iBAAKf,UAAWC,EAAhB,WACE,SAAC,KAAD,CAASD,UAAWC,EAAWY,GAAG,IAAlC,kBAGCC,IACC,SAAC,KAAD,CAASd,UAAWC,EAAWY,GAAG,YAAlC,sBAKDC,GAAa,SAACpB,EAAD,KAAe,SAACkB,EAAD,Q,UCJnC,EAZa,WAGX,OACE,iCACE,SAAC,EAAD,KAEA,SAAC,KAAD","sources":["webpack://react-homework-template/./src/components/UserMenu/UserMenu.module.css?1b0e","components/UserMenu/UserMenu.jsx","webpack://react-homework-template/./src/components/AuthNav/AuthNav.module.css?aff0","components/AuthNav/AuthNav.jsx","webpack://react-homework-template/./src/components/Navigation/Navigation.module.css?4bf2","components/Navigation/Navigation.jsx","pages/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"userMenu\":\"UserMenu_userMenu__Stk7D\"};","import { useSelector, useDispatch } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport authOperations from '../../redux/auth/auth-operations';\nimport { getUsername } from '../../redux/auth/auth-selectors';\nimport { VscAccount } from 'react-icons/vsc';\nimport s from './UserMenu.module.css';\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(getUsername);\n\n  return (\n    <div className={s.userMenu}>\n      <span style={{ marginRight: 10 }}>\n        <VscAccount size=\"24px\" />\n      </span>\n      <h6>Welcome {name}</h6>\n\n      <Button\n        variant=\"primary\"\n        style={{ padding: 0, marginLeft: 10 }}\n        type=\"submit\"\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        LogOut\n      </Button>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"navlink\":\"AuthNav_navlink__3Llfa\"};","import { NavLink } from 'react-router-dom';\nimport s from './AuthNav.module.css';\n\nexport default function AuthNav() {\n  return (\n    <div className={s.authNav}>\n      <NavLink className={s.navlink} to=\"/login\">\n        Login\n      </NavLink>\n\n      <NavLink className={s.navlink} to=\"/auth\">\n        Auth\n      </NavLink>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"app\":\"Navigation_app__+4xjE\",\"navlink\":\"Navigation_navlink__gYeZ0\"};","import { NavLink } from 'react-router-dom';\nimport UserMenu from 'components/UserMenu/UserMenu';\nimport AuthNav from 'components/AuthNav/AuthNav';\nimport { useSelector } from 'react-redux';\nimport { getIsLoggedIn } from '../../redux/auth/auth-selectors';\nimport s from './Navigation.module.css';\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n\n  return (\n    <div className={s.app}>\n      <NavLink className={s.navlink} to=\"/\">\n        Home\n      </NavLink>\n      {isLoggedIn && (\n        <NavLink className={s.navlink} to=\"/contacts\">\n          Contacts\n        </NavLink>\n      )}\n\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </div>\n  );\n};\nexport default Navigation;\n","import Navigation from '../components/Navigation/Navigation';\nimport { Outlet } from 'react-router-dom';\n// import { useSelector } from 'react-redux';\n\n\nconst Home = () => {\n  // const theme = useTheme();\n\n  return (\n    <>\n      <Navigation />\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["UserMenu","dispatch","useDispatch","name","useSelector","getUsername","className","s","style","marginRight","size","Button","variant","padding","marginLeft","type","onClick","authOperations","AuthNav","to","isLoggedIn","getIsLoggedIn"],"sourceRoot":""}